import{_ as e,c as r,a2 as a,o as i}from"./chunks/framework.CYrMloE_.js";const g=JSON.parse('{"title":"从 Remix 升级","description":"","frontmatter":{},"headers":[],"relativePath":"upgrading/remix.md","filePath":"upgrading/remix.md"}'),s={name:"upgrading/remix.md"};function d(l,t,o,n,c,h){return i(),r("div",null,t[0]||(t[0]=[a(`<h1 id="从-remix-升级" tabindex="-1">从 Remix 升级 <a class="header-anchor" href="#从-remix-升级" aria-label="Permalink to &quot;从 Remix 升级&quot;">​</a></h1><p>React Router 版本 7 是 Remix 在版本 2 之后的下一个主要版本（如需了解更多信息，请查看我们的<a href="https://remix.run/blog/incremental-path-to-react-19" target="_blank" rel="noreferrer">“迈向 React 19 的渐进式历程”</a>一文）。</p><p>如果你已经启用了所有 <a href="https://remix.run/docs/start/future-flags" target="_blank" rel="noreferrer">Remix 版本 2 的未来特性</a>标志，那么从 Remix 版本 2 升级到 React Router 版本 7 主要涉及更新依赖项。</p><div class="tip custom-block github-alert"><p class="custom-block-title">提示：</p><p>步骤 2 到 8 中的大部分内容都可以使用社区成员 <a href="https://github.com/jrestall" target="_blank" rel="noreferrer">James Restall</a> 创建的<a href="https://codemod.com/registry/remix-2-react-router-upgrade" target="_blank" rel="noreferrer">代码转换工具 codemod </a> 来自动更新。</p></div><h2 id="_1-使用未来特性" tabindex="-1">1. 使用未来特性 <a class="header-anchor" href="#_1-使用未来特性" aria-label="Permalink to &quot;1. 使用未来特性&quot;">​</a></h2><p>👉 <strong>使用未来特性</strong></p><p>在你的 Remix v2 应用程序中采用所有现有的<a href="https://remix.run/docs/start/future-flags" target="_blank" rel="noreferrer">未来特性</a>。</p><h2 id="_2-更新依赖" tabindex="-1">2. 更新依赖 <a class="header-anchor" href="#_2-更新依赖" aria-label="Permalink to &quot;2. 更新依赖&quot;">​</a></h2><p>大多数过去通过特定运行时软件包（如 <code>@remix-run/node</code>、<code>@remix-run/cloudflare</code> 等）重新导出的“共享”API，在版本 7 中都已整合进了 <code>react-router</code> 里。因此，你不用再从 <code>@react-router/node</code> 或 <code>@react-router/cloudflare</code> 中导入了，而是直接从 <code>react-router</code> 中导入它们。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line diff remove"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { redirect } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@remix-run/node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line diff add"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { redirect } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;react-router&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span></code></pre></div><p>在版本 7 中，你唯一应该从特定运行时软件包中导入的 API，是那些特定于该运行时的 API，比如适用于 Node 的 <code>createFileSessionStorage</code> 以及适用于 Cloudflare 的 <code>createWorkersKVSessionStorage</code>。</p><p>👉 <strong>运行代码转换工具（自动化操作）</strong></p><p>你可以使用以下<a href="https://codemod.com/registry/remix-2-react-router-upgrade" target="_blank" rel="noreferrer">代码转换工具</a>来自动更新你的软件包和导入语句。这个代码转换工具会更新你所有的软件包和导入内容。在运行该代码转换工具之前，务必提交所有未完成的更改，以防你后续需要进行回滚操作。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> codemod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remix/2/react-router/upgrade</span></span></code></pre></div><p>👉 <strong>安装依赖</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # or npm i</span></span></code></pre></div><p>👉 <strong>更新依赖（手动）</strong></p><p>如果你不喜欢使用 codemod，你可以手动更新你的依赖。</p><details class="details custom-block"><summary>展开按字母顺序查看软件包名称变更的列表</summary><table tabindex="0"><thead><tr><th style="text-align:left;">Remix v2 Package</th><th style="text-align:right;"></th><th style="text-align:left;">React Router v7 Package</th></tr></thead><tbody><tr><td style="text-align:left;"><code>@remix-run/architect</code></td><td style="text-align:right;">➡️</td><td style="text-align:left;"><code>@react-router/architect</code></td></tr><tr><td style="text-align:left;"><code>@remix-run/cloudflare</code></td><td style="text-align:right;">➡️</td><td style="text-align:left;"><code>@react-router/cloudflare</code></td></tr><tr><td style="text-align:left;"><code>@remix-run/dev</code></td><td style="text-align:right;">➡️</td><td style="text-align:left;"><code>@react-router/dev</code></td></tr><tr><td style="text-align:left;"><code>@remix-run/express</code></td><td style="text-align:right;">➡️</td><td style="text-align:left;"><code>@react-router/express</code></td></tr><tr><td style="text-align:left;"><code>@remix-run/fs-routes</code></td><td style="text-align:right;">➡️</td><td style="text-align:left;"><code>@react-router/fs-routes</code></td></tr><tr><td style="text-align:left;"><code>@remix-run/node</code></td><td style="text-align:right;">➡️</td><td style="text-align:left;"><code>@react-router/node</code></td></tr><tr><td style="text-align:left;"><code>@remix-run/react</code></td><td style="text-align:right;">➡️</td><td style="text-align:left;"><code>react-router</code></td></tr><tr><td style="text-align:left;"><code>@remix-run/route-config</code></td><td style="text-align:right;">➡️</td><td style="text-align:left;"><code>@react-router/dev</code></td></tr><tr><td style="text-align:left;"><code>@remix-run/routes-option-adapter</code></td><td style="text-align:right;">➡️</td><td style="text-align:left;"><code>@react-router/remix-routes-option-adapter</code></td></tr><tr><td style="text-align:left;"><code>@remix-run/serve</code></td><td style="text-align:right;">➡️</td><td style="text-align:left;"><code>@react-router/serve</code></td></tr><tr><td style="text-align:left;"><code>@remix-run/server-runtime</code></td><td style="text-align:right;">➡️</td><td style="text-align:left;"><code>react-router</code></td></tr><tr><td style="text-align:left;"><code>@remix-run/testing</code></td><td style="text-align:right;">➡️</td><td style="text-align:left;"><code>react-router</code></td></tr></tbody></table></details>`,19)]))}const u=e(s,[["render",d]]);export{g as __pageData,u as default};
